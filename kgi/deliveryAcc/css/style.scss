@charset "UTF-8";

@import '_variable.scss';
@import '_base.scss';
@import '_resetBootstrap.scss';
@import '_title.scss';
@import '_text.scss';
@import '_header.scss';
@import '_footer.scss';
@import '_accountInfo.scss';
@import '_form.scss';
@import '_infoForm.scss';
@import '_linkList.scss';
@import '_notice.scss';
@import '_stepTit.scss';
@import '_infoList.scss';
@import '_filter.scss';

#content {
    // overflow-x: hidden;
    // overflow: hidden;
    transition: 1s ease-in-out opacity;
    animation: contentAinmt ease-in-out 0.2s;
    @include maxWidth-md {
        overflow: hidden;
    }
}
[v-cloak] {
    opacity: 0;
}
@keyframes contentAinmt {
    0% {
        opacity: 0;
    }
    50% {
        opacity: 0;
    }
}

body {
    background: var(--color-gray-bg);
    &.fixedBody {
        overflow-y: hidden;
    }
}

// 文字陰影 ========================================================================
@mixin text-longShadow($lenght: 20, $rgb: #000) {
    $all: ();
    @for $i from 1 through $lenght {
        $all: append($all, append(0px 0px 10px ,$rgb),comma)
    }
    text-shadow: $all;
}

// for ie10 、 ie11 hake ========================================================================
@media screen and (-ms-high-contrast: active),(-ms-high-contrast: none) {
    .ieMask {
        display: block;
    }
}

// scrollBar ========================================================================
@media screen and (min-width: 992px) {
    ::-webkit-scrollbar {
        width: 5px;
        height: 5px;
    }
    ::-webkit-scrollbar-track {
        background-color: #004790;
        background-color: #f5f5f5;
        border-radius: 10px;
    }
    ::-webkit-scrollbar-thumb {
        background-color: #539011;
        background-color: #bfbdba;
        border-radius: 20px;
    }
    ::-webkit-scrollbar-button {
        background-color: #bfbdba;
        border-radius: 20px;
    }
    ::-webkit-scrollbar-corner {
        background-color: #bfbdba;
    }
}

// 回最上面btn ==================================================
.topBtn {
    position: fixed;
    z-index: 1;
    bottom: 35px;
    right: 15px;
    transition: 0.5s ease transform, 0.3s ease opacity;
    opacity: 0;
    a {
        display: block;
        border-radius: 100%;
        width: 45px;
        height: 45px;
        background: rgba(#000, 0.6);
        text-align: center;
        color: #fff;
        font-size: 12px;
        box-sizing: border-box;
        transition: 0.3s ease all;
        position: relative;
        top: 0px;
        padding-top: 10px;
        overflow: hidden;
        box-shadow: 0px 0px 0px 2px #fff;
        span {
            position: relative;
        }
        i {
            display: block;
            margin: 0 auto;
        }
        &:hover {
            opacity: 0.7;
        }
    }
    @include maxWidth-lg {
        right: 10px;
    }
    @include maxWidth-sm {
        bottom: 70px;
        a {
            width: 40px;
            height: 40px;
            font-size: 0px;
            i {
                font-size: 20px;
            }
        }
    }
}

// -- 間距 ==================================================
.margin {
    @for $direction_n from 1 through length($direction) {   // 跑迴圈-方向的數量
        &-#{nth($direction, $direction_n)} {                // 取"方向"陣列的值

            @for $marginWidth_n from 1 through length($marginWidth) {   // 跑回圈-間距寬度 的數量
                &-#{nth($marginWidth, $marginWidth_n)} {    //取"間距寬度"的值
                    margin-#{nth($direction, $direction_n)}: nth($marginWidth, $marginWidth_n) + px !important; // 取方向的值給margin   間距寬度的值給單位
                }
            }

            @for $size_n from 1 through length($size) {     // 跑迴圈-尺寸代號(ex:xl、lg、md) 的數量
                &-#{nth($size, $size_n)} {                  // 取"尺寸代號"陣列的值
                    @media screen and (max-width: map-get($mediaWidth, #{nth($size, $size_n)})) {   // 取"瀏覽器寬度"陣列的值寫media  名稱變數用"尺寸代號"的
                        @for $marginWidth_n from 1 through length($marginWidth) {   // 跑回圈-間距寬度 的數量
                            &-#{nth($marginWidth, $marginWidth_n)} {    //取"間距寬度"的值
                                margin-#{nth($direction, $direction_n)}: nth($marginWidth, $marginWidth_n) + px !important; // 取方向的值給margin   間距寬度的值給單位
                            }
                        }
                    }
                }
            }
        }
    }
}
/* 編譯說明
    ``` scss例
    .margin {
        &-top {
            &-sm {
                @media screen and (max-width: 767px) {
                    &-10 {
                        margin-top: 10px;
                    }
                }
            }
        }
    }
    ```
    編譯出來的css 例：
    ``` css
    @media screen and (max-width: 767px) {
        .margin-top-sm-10 {
            margin-top: 10px;
        }
    }
    ```
*/

// vue transition用 ==================================================
.fade {
    &-enter-active,
    &-leave-active {
        transition: opacity 0.5s;
    }
    &-enter,
    &-leave-to {
        opacity: 0;
        transition: opacity 0s;
        // display: none;
        // visibility: visible;
    }
}

// 不是首頁特製樣式 ==================================================
body:not(.index) {
    .accountInfo-bottom {
        display: none;
    }
    @include maxWidth-sm {
        .header {
            height: 36px;
        }
        .accountInfo-carousel {
            margin-top: -31px;
        }
    }
}

// main ==================================================
.main {
    margin-bottom: 30px;
    .container {
        display: grid;
        gap: var(--gap-base);
    }
}

.pageBlock {
    display: grid;
    gap: var(--gap-base);
}

.quickLink {
    display: flex;
    gap: 10px;
    a {
        flex: 1;
        display: block;
        background: #fff;
        border: solid 1px var(--color-gray-base);
        padding: 10px;
        text-align: center;
        border-radius: var(--border-radius-base);
        color: var(--color-black-base);
        transition: 0.3s ease all;
        svg {
            margin-bottom: 5px;
        }
        &:hover {
            background: rgba(#fff, 0.1);
        }
    }
}

.qrCode {
    display: grid;
    gap: 10px;
    svg, img {
        padding: 15px;
        max-width: 195px;
        box-sizing: border-box;
        border-radius: 10px;
        border: solid 1px;
        margin: auto;
        display: block;
    }
    .remark {
        cursor: pointer;
    }
}

.inAndOutIcon {
    svg {
        margin: 0 auto;
        display: block;
    }
}

.btnArea {
    display: flex;
    gap: var(--gap-sm);
    .btn {
        flex: 1;
    }
    &.text-center {
        justify-content: center;
        .btn {
            flex: none;
        }
    }
    @include maxWidth-sm {
        flex-wrap: wrap;
        .btn {
            flex: none;
            width: 100%;
        }
    }
}

.price {
    font-size: 25px;
    font-weight: bold;
    @include maxWidth-xs {
        font-size: 20px;
    }
}

.dateInput {
    position: relative;
    .fa-calendar {
        pointer-events: none;
        user-select: none;
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        right: 10px;
        color: var(--color-gray-base);
    }
}

.fullType {
    width: 100% !important;
}

.ieMask {
    position: fixed;
    z-index: 99999999999;
    display: flex;
    align-items: center;
    justify-content: center;
    inset: 0;
    background: var(--color-blue-base);
    color: #fff;
    text-align: center;
    display: none;
    a {
        color: #fff;
    }
    &-content {
        display: grid;
        gap: 30px;
    }
    &-text {

    }
    &-link {
        display: flex;
        gap: var(--gap-lg);
        a {
            flex: 1;
            display: grid;
            gap: var(--gap-xs);
            font-size: 18px;
            position: relative;
            i {
                font-size: 40px;
            }
            .badge {
                i {
                    font-size: inherit;
                }
            }
        }
    }
}